package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"
)

// PlaceOrderHandlerFunc turns a function with the right signature into a place order handler
type PlaceOrderHandlerFunc func(PlaceOrderParams) httpkit.Responder

// Handle executing the request and returning a response
func (fn PlaceOrderHandlerFunc) Handle(params PlaceOrderParams) httpkit.Responder {
	return fn(params)
}

// PlaceOrderHandler interface for that can handle valid place order params
type PlaceOrderHandler interface {
	Handle(PlaceOrderParams) httpkit.Responder
}

// NewPlaceOrder creates a new http.Handler for the place order operation
func NewPlaceOrder(ctx *httpkit.Context, handler PlaceOrderHandler) *PlaceOrder {
	return &PlaceOrder{Context: ctx, Handler: handler}
}

/*PlaceOrder swagger:route POST /store/order store placeOrder

Place an order for a pet

*/
type PlaceOrder struct {
	Context *httpkit.Context
	Params  PlaceOrderParams
	Handler PlaceOrderHandler
}

func (o *PlaceOrder) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	o.Params = NewPlaceOrderParams()

	if err := o.Context.BindValidRequest(r, route, &o.Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(o.Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
